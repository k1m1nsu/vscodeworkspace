'''
파이썬에서 파일을 읽고 쓰려면 open() 함수를 이용한다.
open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)
    file: 열고자 하는 파일의 경로 또는 파일 객체입니다.
    mode: 파일을 열 때의 모드를 지정합니다. 주로 'r' (읽기), 'w' (쓰기), 'a' (이어쓰기) 등이 사용됩니다.
    buffering: 버퍼링에 관련된 옵션을 설정합니다. 기본값은 -1로, 시스템 기본값을 사용하도록 합니다.
    encoding: 텍스트 파일을 읽거나 쓸 때의 인코딩을 지정합니다.
    errors: 인코딩 시 발생하는 오류를 처리하는 방법을 지정합니다.
    newline: 텍스트 모드에서 개행 문자를 어떻게 처리할지를 결정합니다.
    closefd: 파일 디스크립터를 닫을지 여부를 지정합니다. 기본값은 True로 파일 객체를 닫을 때 연결된 파일 디스크립터도 함께 닫습니다.
    opener: 사용자 정의 파일 오프너를 지정할 수 있습니다.

    file 매개변수:
        열고자 하는 파일의 경로 또는 파일 객체를 지정합니다.
        파일 경로는 상대 경로나 절대 경로로 지정할 수 있습니다.
        파일 객체를 직접 전달할 수도 있습니다.

    mode 매개변수:
        파일을 열 때의 모드를 지정합니다.
        주로 사용되는 모드:
            'r': 읽기 모드 (기본값)
            'w': 쓰기 모드 (기존 내용을 지우고 파일을 쓰기 시작)
            'a': 이어쓰기 모드 (파일 끝에 내용을 추가)
            'b': 이진 모드 (바이너리 모드, 텍스트가 아닌 이진 데이터를 다룰 때 사용)
            'x': 배타적 생성 모드 (파일이 이미 존재하면 실패)
            그 외에도 w+, r+, a+, x+ 이 있어서 읽고쓰는 모드로 들어갈 수있다.
            https://dojang.io/mod/page/view.php?id=2327
            
    buffering 매개변수:
        버퍼링에 관련된 옵션을 설정합니다.
        기본값은 -1로, 시스템 기본값을 사용하도록 합니다.
        0 또는 False로 설정하면 버퍼링을 비활성화합니다.
        1 이상의 정수로 설정하면 해당 크기의 버퍼를 사용합니다.

    encoding 매개변수:
        텍스트 파일을 읽거나 쓸 때의 인코딩을 지정합니다.
        주로 'utf-8', 'latin-1' 등이 사용됩니다.
        이 매개변수를 생략하면 기본값으로 시스템의 기본 인코딩이 사용됩니다.

    errors 매개변수:
        인코딩 시 발생하는 오류를 처리하는 방법을 지정합니다.
        기본값은 None으로, 오류를 무시하거나 일부 문자를 대체하는 등 다양한 방식으로 처리할 수 있습니다.

    newline 매개변수:
        텍스트 모드에서 개행 문자를 어떻게 처리할지를 결정합니다.
        None일 경우, 플랫폼에 따라 자동으로 처리됩니다.
        '' (빈 문자열)로 설정하면 개행 문자를 변환하지 않습니다.
        '\n'으로 설정하면 강제로 개행 문자를 LF로 변환합니다.

    closefd 매개변수:
        파일 디스크립터를 닫을지 여부를 지정합니다.
        기본값은 True로 파일 객체를 닫을 때 연결된 파일 디스크립터도 함께 닫습니다.

    opener 매개변수:
        사용자 정의 파일 오프너를 지정할 수 있습니다.
        주로 사용되지 않고, 기본값으로 None이 설정되어 있습니다.

파일 객체를 다루고 나서 close() 메소드로 적절하게 리소스를 회수해야한다.
with 문을 사용하며 자동으로 닫히도록 할 수 있다.

with open('example.txt','r') as file:
    content = file.read()

블록을 빠져나가면 자동으로 닫힌다.

'''
content = '''파일 입출력 테스트!
1
2
3
4
5'''

# *주의* w 모드 사용시 파일이 이미 존재한다면 있는 기존파일의 내용을 없애고 새로운 파일을 만든다.
# 기존 파일의 내용을 없앨 목적이 아니라면 x 모드를 사용하는 것을 습관을 들이도록 하자.
# x 모드에서 기존 파일이 존재한다면 에러를 일으킨다.
# 또는 a 모드를 이용하자. 파일이 존재하지 않는다면, 파일을 만들고 쓸 수 있다. 파일이 존재한다면 뒤에 이어서 쓴다.
with open('example','r') as f:
    file_content = f.read() # read(size=-1) 지정된 크기의 데이터를 읽는다. -1이면 모두 읽는다.
    print(type(file_content)) # <class 'str'>
    print(file_content)

    # file_content = f.readline() # 한 줄을 읽는다 쓰는건 write(string)
    # print(type(file_content)) # <class 'str'>
    # print(file_content)

    # file_content = f.readlines() # 모든 줄을 읽어 리스트로 반환 쓰는건 writelines() 
    # print(type(file_content)) # <class 'list'>
    # print(file_content)


    


